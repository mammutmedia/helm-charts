apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "parse-server.fullname" . }}
  labels:
    app.kubernetes.io/component: server
    {{- include "parse-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "parse-server.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "parse-server.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: server
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "parse-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.env.existingSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.env.existingSecret }}
          env:
            - name: PORT
              value: "{{ .Values.service.port }}"
            {{- if .Values.redis.enabled }}
            {{- if .Values.redis.sentinel.enabled }}
            - name: REDIS_MODE
              value: "sentinel"
            - name: REDIS_MASTER_NAME
              value: "{{ .Values.redis.sentinel.masterSet }}"
            - name: REDIS_NODES
              value: "{{ include "parse-server.redisSentinels" . }}"
            {{- else }}
            - name: REDIS_MODE
              value: "standalone"
            - name: REDIS_HOST
              value: "{{ include "parse-server.fullname" . }}-redis"
            {{- end }}
            - name: REDIS_PORT
              value: {{- if .Values.redis.sentinel.enabled }} "26379" {{- else }} "6379" {{- end }}
            {{- end }}
            {{- else if .Values.env.values }}
            {{- toYaml .Values.env.values | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.pushCert.enabled }}
          volumeMounts:
            - mountPath: "/var/parse-server/"
              name: push-certificate
              readOnly: true
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - cp /var/parse-server/ios_push_key.p8 /usr/src/app/ios_push_key.p8
      volumes:
        - name: push-certificate
          secret:
            secretName: {{ .Values.pushCert.existingSecret }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

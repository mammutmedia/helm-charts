# Default values for parse-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: parseplatform/parse-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: '5.4.0'

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ''
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  # maxUnavailable: 1
  # maxUnavailable: 33%
  # minAvailable: 0
  # minAvailable: 25%

# env:
#   secretName: parse-server-env

pushCert:
  enabled: false
  # secretName: parse-server-push-cert

# Metrics
metrics:
  enabled: false
  # prometheus:
  #   prometheusRule:
  #     additionalLabels: {}
  #     namespace: 'another-namespace'
  #     rules:
  #       - alert: ParseServerDown
  #         expr: up{job="parse-server"} == 0
  #         for: 5m
  #         labels:
  #           context: parse-server
  #           severity: warning
  #         annotations:
  #           summary: 'Parse Server Down'
  #           description: '{{ $labels.pod }} on {{ $labels.nodename }} is down'

  # serviceMonitor:
  #   metricRelabelings: []
  #     - sourceLabels: [__name__]
  #       separator: ;
  #       regex: ^fluentd_output_status_buffer_(oldest|newest)_.+
  #       replacement: $1
  #       action: drop
  #   relabelings: []
  #     - sourceLabels: [__meta_kubernetes_pod_node_name]
  #       separator: ;
  #       regex: ^(.*)$
  #       targetLabel: nodename
  #       replacement: $1
  #       action: replace
  #   jobLabel: traefik
  #   interval: 30s
  #   honorLabels: true
  # (Optional)
  # scrapeTimeout: 5s
  # honorTimestamps: true
  # enableHttp2: true
  # followRedirects: true
  # additionalLabels:
  #   foo: bar
  # namespace: "another-namespace"
  # namespaceSelector: {}

nodeSelector: {}

tolerations: []

affinity: {}
